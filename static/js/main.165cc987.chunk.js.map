{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","getCurrentTab","className","map","tab","cn","id","href","onClick","title","content","tabsById","reduce","accumulator","currentTab","App","useState","setSelectedTabId","tabId","ReactDOM","render","document","getElementById"],"mappings":"4OAEaA,EAAO,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,cACpCC,GAAcC,EADyD,EAApBA,eACvBH,GAElC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGL,EAAKM,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWG,IACT,CAAE,YAAaD,EAAIE,KAAOR,IAE5B,UAAQ,MAJV,SAOE,mBACES,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,WACHJ,EAAIE,KAAOR,GACbC,EAAcK,EAAIE,KALxB,SASGF,EAAIK,SAXFL,EAAIE,WAkBjB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAYU,cC5BRb,EAAO,CAClB,CAAES,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAG7BC,EAAWd,EAAKe,QAAO,SAACC,EAAaC,GAAd,mBAAC,eAChCD,GAD+B,kBAEjCC,EAAWR,GAAKQ,MACf,IAESC,EAAM,WACjB,IAEMd,EAAgB,SAAAH,GAAa,OAAKa,EAASb,IAAkB,MAEnE,EAA0CkB,mBAASnB,EAAK,GAAGS,IAA3D,mBAAOR,EAAP,KAAsBmB,EAAtB,KAEMH,EAAab,EAAcH,GAEjC,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAA0CY,EAAWL,SAErD,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAfY,SAAAmB,GAAK,OAAKD,EAAiBC,IAgBvCjB,cAAeA,QC/BvBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.165cc987.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected, getCurrentTab }) => {\n  const selectedTab = getCurrentTab(selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={cn(\n                { 'is-active': tab.id === selectedTabId },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== selectedTabId) {\n                    onTabSelected(tab.id);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const tabsById = tabs.reduce((accumulator, currentTab) => ({\n  ...accumulator,\n  [currentTab.id]: currentTab,\n}), {});\n\nexport const App = () => {\n  const setNewTab = tabId => (setSelectedTabId(tabId));\n\n  const getCurrentTab = selectedTabId => (tabsById[selectedTabId] || null);\n\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const currentTab = getCurrentTab(selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${currentTab.title}`}</h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={setNewTab}\n        getCurrentTab={getCurrentTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}